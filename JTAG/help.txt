Open On-Chip Debugger 0.12.0
Licensed under GNU GPL v2
For bug reports, read
	http://openocd.org/doc/doxygen/bugs.html
Info : auto-selecting first available session transport "jtag". To override use 'transport select <transport>'.
Warn : Transport "jtag" was already selected
run
aarch64
      Aarch64 command group (command valid any time)
  aarch64 cache_info
        display information about target caches
  aarch64 dbginit
        Initialize core debug
  aarch64 disassemble address [count]
        Disassemble instructions
  aarch64 maskisr ['on'|'off']
        mask aarch64 interrupts during single-step (command valid any time)
  aarch64 mcr cpnum op1 CRn CRm op2 value
        write coprocessor register
  aarch64 mrc cpnum op1 CRn CRm op2
        read coprocessor register
  aarch64 smp [on|off]
        smp handling
  aarch64 smp_gdb
        display/fix current core played to gdb
adapter
      adapter command group (command valid any time)
  adapter assert |deassert [srst|trst [assert|deassert srst|trst]]
        Controls SRST and TRST lines.
  adapter deassert |assert [srst|trst [deassert|assert srst|trst]]
        Controls SRST and TRST lines.
  adapter driver driver_name
        Select a debug adapter driver (configuration command)
  adapter gpio [
            
            do|tdi|tms|tck|trst|swdio|swdio_dir|swclk|srst|led[gpio_number]
            [-chip chip_number] [-active-high|-active-low]
            [-push-pull|-open-drain|-open-source]
            
            
            
            
            
            
            
            
            
            
            e|-pull-up|-pull-down][-init-inactive|-init-active|-init-input]
            ]
        gpio adapter command group (configuration command)
  adapter list
        List all built-in debug adapter drivers (command valid any time)
  adapter name
        Returns the name of the currently selected adapter (driver)
        (command valid any time)
  adapter serial serial_string
        Set the serial number of the adapter (configuration command)
  adapter speed [khz]
        With an argument, change to the specified maximum jtag speed.  For
        JTAG, 0 KHz signifies adaptive clocking. With or without argument,
        display current setting. (command valid any time)
  adapter srst
        srst adapter command group (command valid any time)
    adapter srst delay [milliseconds]
          delay after deasserting SRST in ms (command valid any time)
    adapter srst pulse_width [milliseconds]
          SRST assertion pulse width in ms (command valid any time)
  adapter transports transport ...
        Declare transports the adapter supports. (configuration command)
  adapter usb
        usb adapter command group (command valid any time)
    adapter usb location [<bus>-port[.port]...]
          display or set the USB bus location of the USB device
          (configuration command)
add_help_text command_name helptext_string
      Add new command help text; Command can be multiple tokens. (command
      valid any time)
add_script_search_dir <directory>
      dir to search for config files and scripts (command valid any time)
add_usage_text command_name usage_string
      Add new command usage text; command can be multiple tokens. (command
      valid any time)
arm
      ARM Command Group (command valid any time)
  arm semihosting ['enable'|'disable']
        activate support for semihosting operations
  arm semihosting_basedir [dir]
        set the base directory for semihosting I/O operations
  arm semihosting_cmdline arguments
        command line arguments to be passed to program
  arm semihosting_fileio ['enable'|'disable']
        activate support for semihosting fileio operations
  arm semihosting_read_user_param
        read parameters in semihosting-user-cmd-0x10X callbacks
  arm semihosting_redirect (disable | tcp <port> ['debug'|'stdio'|'all'])
        redirect semihosting IO
  arm semihosting_resexit ['enable'|'disable']
        activate support for semihosting resumable exit
bcm2837.ap
      target command group (command valid any time)
  bcm2837.ap arp_examine ['allow-defer']
        used internally for reset processing
  bcm2837.ap arp_halt
        used internally for reset processing
  bcm2837.ap arp_halt_gdb
        used internally for reset processing to halt GDB
  bcm2837.ap arp_poll
        used internally for reset processing
  bcm2837.ap arp_reset
        used internally for reset processing
  bcm2837.ap arp_waitstate
        used internally for reset processing
  bcm2837.ap array2mem arrayname bitwidth address count
        Writes Tcl array of 8/16/32 bit numbers to target memory
  bcm2837.ap cget target_attribute
        returns the specified target attribute (command valid any time)
  bcm2837.ap configure [target_attribute ...]
        configure a new target for use (command valid any time)
  bcm2837.ap curstate
        displays the current state of this target
  bcm2837.ap eventlist
        displays a table of events defined for this target
  bcm2837.ap examine_deferred
        used internally for reset processing
  bcm2837.ap get_reg list
        Get register values from the target
  bcm2837.ap invoke-event event_name
        invoke handler for specified event
  bcm2837.ap mdb address [count]
        Display target memory as 8-bit bytes
  bcm2837.ap mdd address [count]
        Display target memory as 64-bit words
  bcm2837.ap mdh address [count]
        Display target memory as 16-bit half-words
  bcm2837.ap mdw address [count]
        Display target memory as 32-bit words
  bcm2837.ap mem2array arrayname bitwidth address count
        Loads Tcl array of 8/16/32 bit numbers from target memory
  bcm2837.ap mwb address data [count]
        Write byte(s) to target memory
  bcm2837.ap mwd address data [count]
        Write 64-bit word(s) to target memory
  bcm2837.ap mwh address data [count]
        Write 16-bit half-word(s) to target memory
  bcm2837.ap mww address data [count]
        Write 32-bit word(s) to target memory
  bcm2837.ap read_memory address width count ['phys']
        Read Tcl list of 8/16/32/64 bit numbers from target memory
  bcm2837.ap set_reg dict
        Set target register values
  bcm2837.ap was_examined
        used internally for reset processing
  bcm2837.ap write_memory address width data ['phys']
        Write Tcl list of 8/16/32/64 bit numbers to target memory
bcm2837.cpu0
      target command group (command valid any time)
  bcm2837.cpu0 aarch64
        Aarch64 command group (command valid any time)
    bcm2837.cpu0 aarch64 cache_info
          display information about target caches
    bcm2837.cpu0 aarch64 dbginit
          Initialize core debug
    bcm2837.cpu0 aarch64 disassemble address [count]
          Disassemble instructions
    bcm2837.cpu0 aarch64 maskisr ['on'|'off']
          mask aarch64 interrupts during single-step (command valid any
          time)
    bcm2837.cpu0 aarch64 mcr cpnum op1 CRn CRm op2 value
          write coprocessor register
    bcm2837.cpu0 aarch64 mrc cpnum op1 CRn CRm op2
          read coprocessor register
    bcm2837.cpu0 aarch64 smp [on|off]
          smp handling
    bcm2837.cpu0 aarch64 smp_gdb
          display/fix current core played to gdb
  bcm2837.cpu0 arm
        ARM Command Group (command valid any time)
    bcm2837.cpu0 arm semihosting ['enable'|'disable']
          activate support for semihosting operations
    bcm2837.cpu0 arm semihosting_basedir [dir]
          set the base directory for semihosting I/O operations
    bcm2837.cpu0 arm semihosting_cmdline arguments
          command line arguments to be passed to program
    bcm2837.cpu0 arm semihosting_fileio ['enable'|'disable']
          activate support for semihosting fileio operations
    bcm2837.cpu0 arm semihosting_read_user_param
          read parameters in semihosting-user-cmd-0x10X callbacks
    bcm2837.cpu0 arm semihosting_redirect (disable | tcp <port>
              ['debug'|'stdio'|'all'])
          redirect semihosting IO
    bcm2837.cpu0 arm semihosting_resexit ['enable'|'disable']
          activate support for semihosting resumable exit
  bcm2837.cpu0 arp_examine ['allow-defer']
        used internally for reset processing
  bcm2837.cpu0 arp_halt
        used internally for reset processing
  bcm2837.cpu0 arp_halt_gdb
        used internally for reset processing to halt GDB
  bcm2837.cpu0 arp_poll
        used internally for reset processing
  bcm2837.cpu0 arp_reset
        used internally for reset processing
  bcm2837.cpu0 arp_waitstate
        used internally for reset processing
  bcm2837.cpu0 array2mem arrayname bitwidth address count
        Writes Tcl array of 8/16/32 bit numbers to target memory
  bcm2837.cpu0 catch_exc [(nsec_el1,nsec_el2,sec_el1,sec_el3)+,off]
        configure exception catch
  bcm2837.cpu0 cget target_attribute
        returns the specified target attribute (command valid any time)
  bcm2837.cpu0 configure [target_attribute ...]
        configure a new target for use (command valid any time)
  bcm2837.cpu0 curstate
        displays the current state of this target
  bcm2837.cpu0 eventlist
        displays a table of events defined for this target
  bcm2837.cpu0 examine_deferred
        used internally for reset processing
  bcm2837.cpu0 get_reg list
        Get register values from the target
  bcm2837.cpu0 invoke-event event_name
        invoke handler for specified event
  bcm2837.cpu0 mdb address [count]
        Display target memory as 8-bit bytes
  bcm2837.cpu0 mdd address [count]
        Display target memory as 64-bit words
  bcm2837.cpu0 mdh address [count]
        Display target memory as 16-bit half-words
  bcm2837.cpu0 mdw address [count]
        Display target memory as 32-bit words
  bcm2837.cpu0 mem2array arrayname bitwidth address count
        Loads Tcl array of 8/16/32 bit numbers from target memory
  bcm2837.cpu0 mwb address data [count]
        Write byte(s) to target memory
  bcm2837.cpu0 mwd address data [count]
        Write 64-bit word(s) to target memory
  bcm2837.cpu0 mwh address data [count]
        Write 16-bit half-word(s) to target memory
  bcm2837.cpu0 mww address data [count]
        Write 32-bit word(s) to target memory
  bcm2837.cpu0 read_memory address width count ['phys']
        Read Tcl list of 8/16/32/64 bit numbers from target memory
  bcm2837.cpu0 set_reg dict
        Set target register values
  bcm2837.cpu0 was_examined
        used internally for reset processing
  bcm2837.cpu0 write_memory address width data ['phys']
        Write Tcl list of 8/16/32/64 bit numbers to target memory
bcm2837.cpu1
      target command group (command valid any time)
  bcm2837.cpu1 aarch64
        Aarch64 command group (command valid any time)
    bcm2837.cpu1 aarch64 cache_info
          display information about target caches
    bcm2837.cpu1 aarch64 dbginit
          Initialize core debug
    bcm2837.cpu1 aarch64 disassemble address [count]
          Disassemble instructions
    bcm2837.cpu1 aarch64 maskisr ['on'|'off']
          mask aarch64 interrupts during single-step (command valid any
          time)
    bcm2837.cpu1 aarch64 mcr cpnum op1 CRn CRm op2 value
          write coprocessor register
    bcm2837.cpu1 aarch64 mrc cpnum op1 CRn CRm op2
          read coprocessor register
    bcm2837.cpu1 aarch64 smp [on|off]
          smp handling
    bcm2837.cpu1 aarch64 smp_gdb
          display/fix current core played to gdb
  bcm2837.cpu1 arm
        ARM Command Group (command valid any time)
    bcm2837.cpu1 arm semihosting ['enable'|'disable']
          activate support for semihosting operations
    bcm2837.cpu1 arm semihosting_basedir [dir]
          set the base directory for semihosting I/O operations
    bcm2837.cpu1 arm semihosting_cmdline arguments
          command line arguments to be passed to program
    bcm2837.cpu1 arm semihosting_fileio ['enable'|'disable']
          activate support for semihosting fileio operations
    bcm2837.cpu1 arm semihosting_read_user_param
          read parameters in semihosting-user-cmd-0x10X callbacks
    bcm2837.cpu1 arm semihosting_redirect (disable | tcp <port>
              ['debug'|'stdio'|'all'])
          redirect semihosting IO
    bcm2837.cpu1 arm semihosting_resexit ['enable'|'disable']
          activate support for semihosting resumable exit
  bcm2837.cpu1 arp_examine ['allow-defer']
        used internally for reset processing
  bcm2837.cpu1 arp_halt
        used internally for reset processing
  bcm2837.cpu1 arp_halt_gdb
        used internally for reset processing to halt GDB
  bcm2837.cpu1 arp_poll
        used internally for reset processing
  bcm2837.cpu1 arp_reset
        used internally for reset processing
  bcm2837.cpu1 arp_waitstate
        used internally for reset processing
  bcm2837.cpu1 array2mem arrayname bitwidth address count
        Writes Tcl array of 8/16/32 bit numbers to target memory
  bcm2837.cpu1 catch_exc [(nsec_el1,nsec_el2,sec_el1,sec_el3)+,off]
        configure exception catch
  bcm2837.cpu1 cget target_attribute
        returns the specified target attribute (command valid any time)
  bcm2837.cpu1 configure [target_attribute ...]
        configure a new target for use (command valid any time)
  bcm2837.cpu1 curstate
        displays the current state of this target
  bcm2837.cpu1 eventlist
        displays a table of events defined for this target
  bcm2837.cpu1 examine_deferred
        used internally for reset processing
  bcm2837.cpu1 get_reg list
        Get register values from the target
  bcm2837.cpu1 invoke-event event_name
        invoke handler for specified event
  bcm2837.cpu1 mdb address [count]
        Display target memory as 8-bit bytes
  bcm2837.cpu1 mdd address [count]
        Display target memory as 64-bit words
  bcm2837.cpu1 mdh address [count]
        Display target memory as 16-bit half-words
  bcm2837.cpu1 mdw address [count]
        Display target memory as 32-bit words
  bcm2837.cpu1 mem2array arrayname bitwidth address count
        Loads Tcl array of 8/16/32 bit numbers from target memory
  bcm2837.cpu1 mwb address data [count]
        Write byte(s) to target memory
  bcm2837.cpu1 mwd address data [count]
        Write 64-bit word(s) to target memory
  bcm2837.cpu1 mwh address data [count]
        Write 16-bit half-word(s) to target memory
  bcm2837.cpu1 mww address data [count]
        Write 32-bit word(s) to target memory
  bcm2837.cpu1 read_memory address width count ['phys']
        Read Tcl list of 8/16/32/64 bit numbers from target memory
  bcm2837.cpu1 set_reg dict
        Set target register values
  bcm2837.cpu1 was_examined
        used internally for reset processing
  bcm2837.cpu1 write_memory address width data ['phys']
        Write Tcl list of 8/16/32/64 bit numbers to target memory
bcm2837.cpu2
      target command group (command valid any time)
  bcm2837.cpu2 aarch64
        Aarch64 command group (command valid any time)
    bcm2837.cpu2 aarch64 cache_info
          display information about target caches
    bcm2837.cpu2 aarch64 dbginit
          Initialize core debug
    bcm2837.cpu2 aarch64 disassemble address [count]
          Disassemble instructions
    bcm2837.cpu2 aarch64 maskisr ['on'|'off']
          mask aarch64 interrupts during single-step (command valid any
          time)
    bcm2837.cpu2 aarch64 mcr cpnum op1 CRn CRm op2 value
          write coprocessor register
    bcm2837.cpu2 aarch64 mrc cpnum op1 CRn CRm op2
          read coprocessor register
    bcm2837.cpu2 aarch64 smp [on|off]
          smp handling
    bcm2837.cpu2 aarch64 smp_gdb
          display/fix current core played to gdb
  bcm2837.cpu2 arm
        ARM Command Group (command valid any time)
    bcm2837.cpu2 arm semihosting ['enable'|'disable']
          activate support for semihosting operations
    bcm2837.cpu2 arm semihosting_basedir [dir]
          set the base directory for semihosting I/O operations
    bcm2837.cpu2 arm semihosting_cmdline arguments
          command line arguments to be passed to program
    bcm2837.cpu2 arm semihosting_fileio ['enable'|'disable']
          activate support for semihosting fileio operations
    bcm2837.cpu2 arm semihosting_read_user_param
          read parameters in semihosting-user-cmd-0x10X callbacks
    bcm2837.cpu2 arm semihosting_redirect (disable | tcp <port>
              ['debug'|'stdio'|'all'])
          redirect semihosting IO
    bcm2837.cpu2 arm semihosting_resexit ['enable'|'disable']
          activate support for semihosting resumable exit
  bcm2837.cpu2 arp_examine ['allow-defer']
        used internally for reset processing
  bcm2837.cpu2 arp_halt
        used internally for reset processing
  bcm2837.cpu2 arp_halt_gdb
        used internally for reset processing to halt GDB
  bcm2837.cpu2 arp_poll
        used internally for reset processing
  bcm2837.cpu2 arp_reset
        used internally for reset processing
  bcm2837.cpu2 arp_waitstate
        used internally for reset processing
  bcm2837.cpu2 array2mem arrayname bitwidth address count
        Writes Tcl array of 8/16/32 bit numbers to target memory
  bcm2837.cpu2 catch_exc [(nsec_el1,nsec_el2,sec_el1,sec_el3)+,off]
        configure exception catch
  bcm2837.cpu2 cget target_attribute
        returns the specified target attribute (command valid any time)
  bcm2837.cpu2 configure [target_attribute ...]
        configure a new target for use (command valid any time)
  bcm2837.cpu2 curstate
        displays the current state of this target
  bcm2837.cpu2 eventlist
        displays a table of events defined for this target
  bcm2837.cpu2 examine_deferred
        used internally for reset processing
  bcm2837.cpu2 get_reg list
        Get register values from the target
  bcm2837.cpu2 invoke-event event_name
        invoke handler for specified event
  bcm2837.cpu2 mdb address [count]
        Display target memory as 8-bit bytes
  bcm2837.cpu2 mdd address [count]
        Display target memory as 64-bit words
  bcm2837.cpu2 mdh address [count]
        Display target memory as 16-bit half-words
  bcm2837.cpu2 mdw address [count]
        Display target memory as 32-bit words
  bcm2837.cpu2 mem2array arrayname bitwidth address count
        Loads Tcl array of 8/16/32 bit numbers from target memory
  bcm2837.cpu2 mwb address data [count]
        Write byte(s) to target memory
  bcm2837.cpu2 mwd address data [count]
        Write 64-bit word(s) to target memory
  bcm2837.cpu2 mwh address data [count]
        Write 16-bit half-word(s) to target memory
  bcm2837.cpu2 mww address data [count]
        Write 32-bit word(s) to target memory
  bcm2837.cpu2 read_memory address width count ['phys']
        Read Tcl list of 8/16/32/64 bit numbers from target memory
  bcm2837.cpu2 set_reg dict
        Set target register values
  bcm2837.cpu2 was_examined
        used internally for reset processing
  bcm2837.cpu2 write_memory address width data ['phys']
        Write Tcl list of 8/16/32/64 bit numbers to target memory
bcm2837.cpu3
      target command group (command valid any time)
  bcm2837.cpu3 aarch64
        Aarch64 command group (command valid any time)
    bcm2837.cpu3 aarch64 cache_info
          display information about target caches
    bcm2837.cpu3 aarch64 dbginit
          Initialize core debug
    bcm2837.cpu3 aarch64 disassemble address [count]
          Disassemble instructions
    bcm2837.cpu3 aarch64 maskisr ['on'|'off']
          mask aarch64 interrupts during single-step (command valid any
          time)
    bcm2837.cpu3 aarch64 mcr cpnum op1 CRn CRm op2 value
          write coprocessor register
    bcm2837.cpu3 aarch64 mrc cpnum op1 CRn CRm op2
          read coprocessor register
    bcm2837.cpu3 aarch64 smp [on|off]
          smp handling
    bcm2837.cpu3 aarch64 smp_gdb
          display/fix current core played to gdb
  bcm2837.cpu3 arm
        ARM Command Group (command valid any time)
    bcm2837.cpu3 arm semihosting ['enable'|'disable']
          activate support for semihosting operations
    bcm2837.cpu3 arm semihosting_basedir [dir]
          set the base directory for semihosting I/O operations
    bcm2837.cpu3 arm semihosting_cmdline arguments
          command line arguments to be passed to program
    bcm2837.cpu3 arm semihosting_fileio ['enable'|'disable']
          activate support for semihosting fileio operations
    bcm2837.cpu3 arm semihosting_read_user_param
          read parameters in semihosting-user-cmd-0x10X callbacks
    bcm2837.cpu3 arm semihosting_redirect (disable | tcp <port>
              ['debug'|'stdio'|'all'])
          redirect semihosting IO
    bcm2837.cpu3 arm semihosting_resexit ['enable'|'disable']
          activate support for semihosting resumable exit
  bcm2837.cpu3 arp_examine ['allow-defer']
        used internally for reset processing
  bcm2837.cpu3 arp_halt
        used internally for reset processing
  bcm2837.cpu3 arp_halt_gdb
        used internally for reset processing to halt GDB
  bcm2837.cpu3 arp_poll
        used internally for reset processing
  bcm2837.cpu3 arp_reset
        used internally for reset processing
  bcm2837.cpu3 arp_waitstate
        used internally for reset processing
  bcm2837.cpu3 array2mem arrayname bitwidth address count
        Writes Tcl array of 8/16/32 bit numbers to target memory
  bcm2837.cpu3 catch_exc [(nsec_el1,nsec_el2,sec_el1,sec_el3)+,off]
        configure exception catch
  bcm2837.cpu3 cget target_attribute
        returns the specified target attribute (command valid any time)
  bcm2837.cpu3 configure [target_attribute ...]
        configure a new target for use (command valid any time)
  bcm2837.cpu3 curstate
        displays the current state of this target
  bcm2837.cpu3 eventlist
        displays a table of events defined for this target
  bcm2837.cpu3 examine_deferred
        used internally for reset processing
  bcm2837.cpu3 get_reg list
        Get register values from the target
  bcm2837.cpu3 invoke-event event_name
        invoke handler for specified event
  bcm2837.cpu3 mdb address [count]
        Display target memory as 8-bit bytes
  bcm2837.cpu3 mdd address [count]
        Display target memory as 64-bit words
  bcm2837.cpu3 mdh address [count]
        Display target memory as 16-bit half-words
  bcm2837.cpu3 mdw address [count]
        Display target memory as 32-bit words
  bcm2837.cpu3 mem2array arrayname bitwidth address count
        Loads Tcl array of 8/16/32 bit numbers from target memory
  bcm2837.cpu3 mwb address data [count]
        Write byte(s) to target memory
  bcm2837.cpu3 mwd address data [count]
        Write 64-bit word(s) to target memory
  bcm2837.cpu3 mwh address data [count]
        Write 16-bit half-word(s) to target memory
  bcm2837.cpu3 mww address data [count]
        Write 32-bit word(s) to target memory
  bcm2837.cpu3 read_memory address width count ['phys']
        Read Tcl list of 8/16/32/64 bit numbers from target memory
  bcm2837.cpu3 set_reg dict
        Set target register values
  bcm2837.cpu3 was_examined
        used internally for reset processing
  bcm2837.cpu3 write_memory address width data ['phys']
        Write Tcl list of 8/16/32/64 bit numbers to target memory
bcm2837.cti0
      cti instance command group (command valid any time)
  bcm2837.cti0 ack event
        acknowledge a CTI event
  bcm2837.cti0 channel channel_number operation
        do an operation on one CTI channel, possible operations: gate,
        ungate, set, clear and pulse
  bcm2837.cti0 dump
        dump CTI registers
  bcm2837.cti0 enable 'on'|'off'
        enable or disable the CTI
  bcm2837.cti0 read register_name
        read a CTI register
  bcm2837.cti0 testmode 'on'|'off'
        enable or disable integration test mode
  bcm2837.cti0 write register_name value
        write to a CTI register
bcm2837.cti1
      cti instance command group (command valid any time)
  bcm2837.cti1 ack event
        acknowledge a CTI event
  bcm2837.cti1 channel channel_number operation
        do an operation on one CTI channel, possible operations: gate,
        ungate, set, clear and pulse
  bcm2837.cti1 dump
        dump CTI registers
  bcm2837.cti1 enable 'on'|'off'
        enable or disable the CTI
  bcm2837.cti1 read register_name
        read a CTI register
  bcm2837.cti1 testmode 'on'|'off'
        enable or disable integration test mode
  bcm2837.cti1 write register_name value
        write to a CTI register
bcm2837.cti2
      cti instance command group (command valid any time)
  bcm2837.cti2 ack event
        acknowledge a CTI event
  bcm2837.cti2 channel channel_number operation
        do an operation on one CTI channel, possible operations: gate,
        ungate, set, clear and pulse
  bcm2837.cti2 dump
        dump CTI registers
  bcm2837.cti2 enable 'on'|'off'
        enable or disable the CTI
  bcm2837.cti2 read register_name
        read a CTI register
  bcm2837.cti2 testmode 'on'|'off'
        enable or disable integration test mode
  bcm2837.cti2 write register_name value
        write to a CTI register
bcm2837.cti3
      cti instance command group (command valid any time)
  bcm2837.cti3 ack event
        acknowledge a CTI event
  bcm2837.cti3 channel channel_number operation
        do an operation on one CTI channel, possible operations: gate,
        ungate, set, clear and pulse
  bcm2837.cti3 dump
        dump CTI registers
  bcm2837.cti3 enable 'on'|'off'
        enable or disable the CTI
  bcm2837.cti3 read register_name
        read a CTI register
  bcm2837.cti3 testmode 'on'|'off'
        enable or disable integration test mode
  bcm2837.cti3 write register_name value
        write to a CTI register
bcm2837.dap
      dap instance command group (command valid any time)
  bcm2837.dap apcsw [value [mask]]
        Set CSW default bits (command valid any time)
  bcm2837.dap apid [ap_num]
        return ID register from AP (default currently selected AP)
  bcm2837.dap apreg ap_num reg [value]
        read/write a register from AP (reg is byte address of a word
        register, like 0 4 8...)
  bcm2837.dap apsel [ap_num]
        Set the currently selected AP (default 0) and display the result
        (command valid any time)
  bcm2837.dap baseaddr [ap_num]
        return debug base address from MEM-AP (default currently selected
        AP)
  bcm2837.dap dpreg reg [value]
        read/write a register from DP (reg is byte address (bank << 4 |
        reg) of a word register, like 0 4 8...)
  bcm2837.dap info [ap_num | 'root']
        display ROM table for specified MEM-AP (default currently selected
        AP) or the ADIv6 root ROM table
  bcm2837.dap memaccess [cycles]
        set/get number of extra tck for MEM-AP memory bus access [0-255]
  bcm2837.dap nu_npcx_quirks [enable]
        set/get quirks mode for Nuvoton NPCX controllers (configuration
        command)
  bcm2837.dap ti_be_32_quirks [enable]
        set/get quirks mode for TI TMS450/TMS570 processors (configuration
        command)
bindto [name]
      Specify address by name on which to listen for incoming TCP/IP
      connections (configuration command)
capture command
      Capture progress output and return as tcl return value. If the
      progress output was empty, return tcl return value. (command valid
      any time)
catch_exc [(nsec_el1,nsec_el2,sec_el1,sec_el3)+,off]
      configure exception catch
command
      core command group (introspection) (command valid any time)
  command mode [command_name ...]
        Returns the command modes allowed by a command: 'any', 'config', or
        'exec'. If no command is specified, returns the current command
        mode. Returns 'unknown' if an unknown command is given. Command can
        be multiple tokens. (command valid any time)
cti
      CTI commands (configuration command)
  cti create name '-chain-position' name [options ...]
        Creates a new CTI object (command valid any time)
  cti names
        Lists all registered CTI objects by name (command valid any time)
dap
      DAP commands (configuration command)
  dap create name '-chain-position' name
        Creates a new DAP instance (command valid any time)
  dap info [ap_num | 'root']
        display ROM table for specified MEM-AP (default MEM-AP of current
        target) or the ADIv6 root ROM table of current target's DAP
  dap init
        Initialize all registered DAP instances (command valid any time)
  dap names
        Lists all registered DAP instances by name (command valid any time)
debug_level number
      Sets the verbosity level of debugging output. 0 shows errors only; 1
      adds warnings; 2 (default) adds other info; 3 adds debugging; 4 adds
      extra verbose debugging. (command valid any time)
drscan tap_name [num_bits value]* ['-endstate' state_name]
      Execute Data Register (DR) scan for one TAP.  Other TAPs must be in
      BYPASS mode.
echo [-n] string
      Logs a message at "user" priority. Option "-n" suppresses trailing
      newline (command valid any time)
exit
      exit telnet session
expr
       (command valid any time)
find <file>
      print full path to file according to OpenOCD search rules (command
      valid any time)
flash
      NOR flash command group (command valid any time)
  flash bank bank_id driver_name base_address size_bytes chip_width_bytes
            bus_width_bytes target [driver_options ...]
        Define a new bank with the given name, using the specified NOR
        flash driver. (configuration command)
  flash banks
        Display table with information about flash banks. (command valid
        any time)
  flash init
        Initialize flash devices. (configuration command)
  flash list
        Returns a list of details about the flash banks. (command valid any
        time)
flush_count
      Returns the number of times the JTAG queue has been flushed.
ftdi
      perform ftdi management (command valid any time)
  ftdi channel (0-3)
        set the channel of the FTDI device that is used as JTAG
        (configuration command)
  ftdi device_desc description_string
        set the USB device description of the FTDI device (configuration
        command)
  ftdi get_signal name
        read the value of a layout-specific signal
  ftdi layout_init data direction
        initialize the FTDI GPIO signals used to control output-enables and
        reset signals (configuration command)
  ftdi layout_signal name [-data mask|-ndata mask] [-oe mask|-noe mask]
            [-alias|-nalias name]
        define a signal controlled by one or more FTDI GPIO as data and/or
        output enable (command valid any time)
  ftdi set_signal name (1|0|z)
        control a layout-specific signal
  ftdi tdo_sample_edge (rising|falling)
        set which TCK clock edge is used for sampling TDO - default is
        rising-edge (Setting to falling-edge may allow signalling speed
        increase) (command valid any time)
  ftdi vid_pid (vid pid)*
        the vendor ID and product ID of the FTDI device (configuration
        command)
gdb_breakpoint_override ('hard'|'soft'|'disable')
      Display or specify type of breakpoint to be used by gdb 'break'
      commands. (command valid any time)
gdb_flash_program ('enable'|'disable')
      enable or disable flash program (configuration command)
gdb_memory_map ('enable'|'disable')
      enable or disable memory map (configuration command)
gdb_port [port_num]
      Normally gdb listens to a TCP/IP port. Each subsequent GDB server
      listens for the next port number after the base port number
      specified. No arguments reports GDB port. "pipe" means listen to
      stdin output to stdout, an integer is base port number, "disabled"
      disables port. Any other string is are interpreted as named pipe to
      listen to. Output pipe is the same name as input pipe, but with 'o'
      appended. (configuration command)
gdb_report_data_abort ('enable'|'disable')
      enable or disable reporting data aborts (configuration command)
gdb_report_register_access_error ('enable'|'disable')
      enable or disable reporting register access errors (configuration
      command)
gdb_save_tdesc
      Save the target description file
gdb_sync
      next stepi will return immediately allowing GDB to fetch register
      state without affecting target state (command valid any time)
gdb_target_description ('enable'|'disable')
      enable or disable target description (configuration command)
help [command_name]
      Show full command help; command can be multiple tokens. (command
      valid any time)
init
      Initializes configured targets and servers.  Changes command mode
      from CONFIG to EXEC.  Unless 'noinit' is called, this command is
      called automatically at the end of startup. (command valid any time)
ipdbg [-start|-stop] -tap device.tap -hub ir_value [dr_length] [-port
          number] [-tool number] [-vir [vir_value [length [instr_code]]]]
      Starts or stops an IPDBG JTAG-Host server.
irscan [tap_name instruction]* ['-endstate' state_name]
      Execute Instruction Register (IR) scan.  The specified opcodes are
      put into each TAP's IR, and other TAPs are put in BYPASS.
jsp_port [port_num]
      Specify port on which to listen for incoming JSP telnet connections.
      (command valid any time)
jtag
      perform jtag tap actions (command valid any time)
  jtag arp_init
        Validates JTAG scan chain against the list of declared TAPs using
        just the four standard JTAG signals. (command valid any time)
  jtag arp_init-reset
        Uses TRST and SRST to try resetting everything on the JTAG scan
        chain, then performs 'jtag arp_init'. (command valid any time)
  jtag cget tap_name '-event' event_name
        Return any Tcl handler for the specified TAP event.
  jtag configure tap_name '-event' event_name handler
        Provide a Tcl handler for the specified TAP event. (command valid
        any time)
  jtag drscan tap_name [num_bits value]* ['-endstate' state_name]
        Execute Data Register (DR) scan for one TAP.  Other TAPs must be in
        BYPASS mode.
  jtag flush_count
        Returns the number of times the JTAG queue has been flushed.
  jtag init
        initialize jtag scan chain (command valid any time)
  jtag names
        Returns list of all JTAG tap names. (command valid any time)
  jtag newtap basename tap_type '-irlen' count ['-enable'|'-disable']
            ['-expected_id' number] ['-ignore-version'] ['-ignore-bypass']
            ['-ircapture' number] ['-mask' number]
        Create a new TAP instance named basename.tap_type, and appends it
        to the scan chain. (configuration command)
  jtag pathmove start_state state1 [state2 [state3 ...]]
        Move JTAG state machine from current state (start_state) to state1,
        then state2, state3, etc.
  jtag tapdisable tap_name
        Try to disable the specified TAP using the 'tap-disable' TAP event.
  jtag tapenable tap_name
        Try to enable the specified TAP using the 'tap-enable' TAP event.
  jtag tapisenabled tap_name
        Returns a Tcl boolean (0/1) indicating whether the TAP is enabled
        (1) or not (0).
jtag_flush_queue_sleep [sleep in ms]
      For debug purposes(simulate long delays of interface) to test
      performance or change in behavior. Default 0ms. (command valid any
      time)
jtag_ntrst_assert_width [milliseconds]
      delay after asserting trst in ms (command valid any time)
jtag_ntrst_delay [milliseconds]
      delay after deasserting trst in ms (command valid any time)
jtag_rclk [fallback_speed_khz]
      With an argument, change to to use adaptive clocking if possible;
      else to use the fallback speed.  With or without argument, display
      current setting. (command valid any time)
log_output [file_name | "default"]
      redirect logging to a file (default: stderr) (command valid any time)
measure_clk
      Runs a test to measure the JTAG clk. Useful with RCLK / RTCK.
      (command valid any time)
ms
      Returns ever increasing milliseconds. Used to calculate differences
      in time. (command valid any time)
nand
      NAND flash command group (command valid any time)
  nand device bank_id driver target [driver_options ...]
        defines a new NAND bank (configuration command)
  nand drivers
        lists available NAND drivers (command valid any time)
  nand init
        initialize NAND devices (configuration command)
noinit
      Prevent 'init' from being called at startup. (configuration command)
ocd_find file
      find full path to file (command valid any time)
pathmove start_state state1 [state2 [state3 ...]]
      Move JTAG state machine from current state (start_state) to state1,
      then state2, state3, etc.
pld
      programmable logic device commands (command valid any time)
  pld device driver_name [driver_args ... ]
        configure a PLD device (configuration command)
  pld init
        initialize PLD devices (configuration command)
poll_period
      set the servers polling period (command valid any time)
power_restore
      Overridable procedure run when power restore is detected. Runs 'reset
      init' by default. (command valid any time)
program <filename> [address] [pre-verify] [verify] [reset] [exit]
      write an image to flash, address is only required for binary images.
      verify, reset, exit are optional (command valid any time)
reset_config [none|trst_only|srst_only|trst_and_srst]
          [srst_pulls_trst|trst_pulls_srst|combined|separate]
          [srst_gates_jtag|srst_nogate] [trst_push_pull|trst_open_drain]
          [srst_push_pull|srst_open_drain]
          [connect_deassert_srst|connect_assert_srst]
      configure adapter reset behavior (command valid any time)
rtt
      RTT (command valid any time)
  rtt server
        RTT server (command valid any time)
    rtt server start <port> <channel>
          Start a RTT server (command valid any time)
    rtt server stop <port>
          Stop a RTT server (command valid any time)
runtest num_cycles
      Move to Run-Test/Idle, and issue TCK for num_cycles.
scan_chain
      print current scan chain configuration (command valid any time)
script <file>
      filename of OpenOCD script (tcl) to run (command valid any time)
shutdown
      shut the server down (command valid any time)
sleep milliseconds ['busy']
      Sleep for specified number of milliseconds.  "busy" will busy wait
      instead (avoid this). (command valid any time)
srst_deasserted
      Overridable procedure run when srst deassert is detected. Runs 'reset
      init' by default. (command valid any time)
svf [-tap device.tap] <file> [quiet] [nil] [progress] [ignore_error]
      Runs a SVF file.
swo
      swo command group
  swo create name [-dap dap] [-ap-num num] [-baseaddr baseaddr]
        Creates a new TPIU or SWO object (command valid any time)
  swo init
        Initialize TPIU and SWO
  swo names
        Lists all registered TPIU and SWO objects by name (command valid
        any time)
target
      configure target (configuration command)
  target create name type '-chain-position' name [options ...]
        Creates and selects a new target (configuration command)
  target current
        Returns the currently selected target (command valid any time)
  target init
        initialize targets (configuration command)
  target names
        Returns the names of all targets as a list of strings (command
        valid any time)
  target smp targetname1 targetname2 ...
        gather several target in a smp list (command valid any time)
  target types
        Returns the available target types as a list of strings (command
        valid any time)
targets [target]
      change current default target (one parameter) or prints table of all
      targets (no parameters) (command valid any time)
tcl_notifications [on|off]
      Target Notification output
tcl_port [port_num]
      Specify port on which to listen for incoming Tcl syntax.  Read help
      on 'gdb_port'. (configuration command)
tcl_trace [on|off]
      Target trace output
telnet_port [port_num]
      Specify port on which to listen for incoming telnet connections. 
      Read help on 'gdb_port'. (configuration command)
tms_sequence ['short'|'long']
      Display or change what style TMS sequences to use for JTAG state
      transitions:  short (default) or long.  Only for working around JTAG
      bugs. (command valid any time)
tpiu
      tpiu command group
  tpiu create name [-dap dap] [-ap-num num] [-baseaddr baseaddr]
        Creates a new TPIU or SWO object (command valid any time)
  tpiu init
        Initialize TPIU and SWO
  tpiu names
        Lists all registered TPIU and SWO objects by name (command valid
        any time)
transport
      Transport command group (command valid any time)
  transport init
        Initialize this session's transport (command valid any time)
  transport list
        list all built-in transports (command valid any time)
  transport select [transport_name]
        Select this session's transport (command valid any time)
usage [command_name]
      Show basic command usage; command can be multiple tokens. (command
      valid any time)
verify_ircapture ['enable'|'disable']
      Display or assign flag controlling whether to verify values captured
      during Capture-IR. (command valid any time)
verify_jtag ['enable'|'disable']
      Display or assign flag controlling whether to verify values captured
      during IR and DR scans. (command valid any time)
version
      show program version (command valid any time)
wait_srst_deassert ms
      Wait for an SRST deassert. Useful for cases where you need something
      to happen within ms of an srst deassert. Timeout in ms (command valid
      any time)
xsvf (tapname|'plain') filename ['virt2'] ['quiet']
      Runs a XSVF file.  If 'virt2' is given, xruntest counts are
      interpreted as TCK cycles rather than as microseconds.  Without the
      'quiet' option, all comments, retries, and mismatches will be
      reported.
